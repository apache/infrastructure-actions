# Copyright (c) The stash contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: "Stash - Save"
description: "Stash your big build cache."
author: assignUser

inputs:
  key:
    description: >
      Name of the artifact the stash is stored as. There is no `restore-key`
      functionality as there is no eviction (only expiry).

      The action checks the current branch for a stash, if there is no match,
      the base branch(PRs)/default branch is searched. If there is more than one
      match for any branch the most recently updated stash takes precedent.

      To reduce amount of api calls (1000/h/repo limit) the name of the
      current branch will be appended to the key. Key and branchname will be normalized.
    required: true
  path:
    description: >
      A file, directory or wildcard pattern that describes what to upload.
      For dirs and wildcards some flattening will apply:
      For wildcards see: https://github.com/actions/upload-artifact?tab=readme-ov-file#upload-using-multiple-paths-and-exclusions
      For dirs the top level is removed, e.g. with '.github' as the path input,
        the artifact will contain the contents of '.github', so adding '.github'
        as the path in the restore action is necessary.

    required: true
  if-no-files-found:
    description: >
      The desired behavior if no files are found using the provided path.

      Available Options:
        warn: Output a warning but do not fail the action
        error: Fail the action with an error message
        ignore: Do not output any warnings or errors, the action does not fail
    default: 'warn'
  retention-days:
    description: >
      Duration after which stash will expire in days.
      Default is 5 days to bridge weekends.

      Minimum 1 day.
      Maximum 90 days unless changed from the repository settings page.
    default: '5'
  compression-level:
    description: >
      The level of compression for Zlib to be applied to the artifact archive.
      The value can range from 0 to 9:
      - 0: No compression
      - 1: Best speed
      - 6: Default compression (same as GNU Gzip)
      - 9: Best compression
      Higher levels will result in better compression, but will take longer to complete.
      For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
    default: '6'
  overwrite:
    description: >
      If true, a stash with a matching key will be deleted before a new one is uploaded.
      If false, the action will fail if a stash for the given key already exists.
      Does not fail if the artifact does not exist.

      Default is true to enable updating the stash.
      Only applies within a workflow. Existing stashes are unaffected.
    default: 'true'
  include-hidden-files:
    description: >
      If true, hidden files will be included in the artifact.
      If false, hidden files will be excluded from the artifact.
    default: 'false'

outputs:
  stash-id:
    description: >
      A unique identifier for the artifact that was just uploaded. Empty if the artifact upload failed.

      This ID can be used as input to other APIs to download, delete or get more information about an artifact: https://docs.github.com/en/rest/actions/artifacts
    value: ${{ steps.upload.outputs.artifact-id }}
  stash-url:
    description: >
      A download URL for the artifact that was just uploaded. Empty if the artifact upload failed.

      This download URL only works for requests Authenticated with GitHub. Anonymous downloads will be prompted to first login.
      If an anonymous download URL is needed than a short time restricted URL can be generated using the download artifact API: https://docs.github.com/en/rest/actions/artifacts#download-an-artifact

      This URL will be valid for as long as the artifact exists and the workflow run and repository exists. Once an artifact has expired this URL will no longer work.
      Common uses cases for such a download URL can be adding download links to artifacts in descriptions or comments on pull requests or issues.
    value: ${{ steps.upload.outputs.artifact-url }}

runs:
  using: 'composite'
  steps:
    - name: Check Check for dependencies
      shell: bash
      run: |
        type -P python3 > /dev/null 2>&1 || { echo "::error ::python3 is required for this action"; exit 1; }

    - name: Mung Artifact Name
      id: mung
      shell: python3 {0}
      env:
        PYTHONPATH: "${{ github.action_path }}/../shared/"
        stash_key: "${{ inputs.key }}"
        ref_name: "${{ github.ref_name }}"
      run: |
        import mung as m
        m.output_munged_name()

    - name: Upload Stash
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.mung.outputs.stash_name }}
        path: ${{ inputs.path }}
        retention-days: ${{ inputs.retention-days }}
        if-no-files-found: ${{ inputs.if-no-files-found }}
        compression-level: ${{ inputs.compression-level }}
        overwrite: ${{ inputs.overwrite }}
        include-hidden-files: ${{ inputs.include-hidden-files }}
